{"needs":[],"includes":[],"timestamp":0,"tags":{"def":{"needs":[],"functions":{"user":{"comment":"*\n         * Retourner l'utilisateur actuellement connecté ou null.\n         * {\n         *   id: identifiant unique de l'utilisateur\n         *   login : ...\n         *   name : nom usuel\n         *   enabled : actif ou non\n         *   creation : date de création.\n         *   data : {}\n         * }\n         ","args":[]},"error":{"comment":"*\n         * Retourner la dernière erreur de connexion.\n         * Par exemple, -5 signifie que le mot de passe est erroné.\n         ","args":[]},"login":{"comment":"*\n\t * Accessor for login.\n\t ","args":["v"]},"password":{"comment":"*\n\t * Accessor for password.\n\t ","args":["v"]},"autologin":{"comment":"*\n         * Tente de se  connecter en allant chercher  le dernier login\n         * ayant réussi dans le local storage.\n         ","args":[]},"connect":{"comment":"*\n\t * Tente une connection. Le retour est asynchrone et se fait\n\t * à travers l'événement Change.\n\t ","args":["login","password"]},"disconnect":{"comment":"*\n         * Déconnecte l'uilisateur courant.\n         ","args":[]},"isLogged":{"comment":"*\n\t * @return True s'il y a un utilisateur actuellement connecté.\n\t ","args":[]},"getData":{"comment":"*\n         * @return data\n         ","args":["key"]},"setData":{"comment":"*\n         * @param data\n         ","args":["key","val"]},"getRoles":{"comment":"","args":[]},"hasRole":{"comment":"","args":["role"]},"_change":{"comment":"","args":[]},"_onLogout":{"comment":"*\n\t * @PRIVATE\n\t ","args":[]},"_onChallenge":{"comment":"*\n         * @private\n         ","args":["code"]},"_onResponse":{"comment":"*\n         * @private\n         ","args":["user"]},"_ping":{"comment":"*\n         * Tant qu'on  est connecté,  on envoie un  ping toutes  les 3\n         * minutes pour empêcher la session d'expirer.\n         ","args":[]},"_onPing":{"comment":"","args":["result"]},"_hash":{"comment":"*\n         * @private\n         ","args":["password","code"]}},"comment":"*\n * Cet  objet  devrait  être  instancié   une  seule  fois  dans  vote\n * application et stoqué dans la variable $$.App, par exemple.\n * @code\n * $$.App.login = $$(\"tfw.Login\");\n * @code\n *\n * Pour se connecter, il faut utiliser la méthode connect().\n * @code\n * var login = $$(\"tfw.Login\");\n * login.login( \"tutu\" );\n * login.password( \"phsswdrd\" );\n * login.connect();\n * @code\n *\n * @signal  Change(this)  Se  déclenche  dés  que  l'identification  a\n * changé. Ca peut être un login ou un logout.\n ","name":"tfw.Login","singleton":true,"init":""},"zip":"window[\"TFW::tfw.Login\"]={singleton:!0,signals:[\"Change\"],init:function(){this._login=\"\",this._password=\"\",this._autologin=0,this._user=null,this._error=0},functions:{user:function(){return this._user},error:function(){return this._error},login:function(t){return void 0===t?this._login:(this._login=t,this)},password:function(t){return void 0===t?this._password:(this._password=t,this)},autologin:function(){this._autologin=1;var t=$$.localLoad(\"nigolotua\");return t||(t=[\"\",\"\"]),\"\"==t[0]?!1:(this.login(t[0]),this.password(t[1]),this.connect(),!0)},connect:function(t,i){void 0!==t&&this.login(t),void 0!==i&&this.password(i),this._error=0,$$.service(\"tfw.login.Challenge\",this._login,this,\"_onChallenge\")},disconnect:function(){$$.service(\"tfw.login.Logout\",null,this,\"_onLogout\"),$$.localSave(\"nigolotua\",[\"\",\"\"]),this._roles=null},isLogged:function(){return this._user&&this._user.roles.length>0?!0:!1},getData:function(t){return this._user&&this._user.data?this._user.data[t]:void 0},setData:function(t,i){return this._user?(this._user.data||(this._user.data={}),this._user.data[t]=i,void $$.service(\"tfw.login.SetData\",{k:t,v:i})):void 0},getRoles:function(){return this._roles},hasRole:function(t){if(!this._user)return!1;if(!this._user.roles)return!1;for(var i in this._user.roles)if(t.toUpperCase()==this._user.roles[i].toUpperCase())return!0;return!1},_change:function(){this.fireChange(this)},_onLogout:function(){this._roles=[],this._data={},this._user=null,this._change()},_onChallenge:function(t){var i=this._hash(this._password,t);$$.service(\"tfw.login.Response\",i,this,\"_onResponse\")},_onResponse:function(t){\"object\"==typeof t?(this._user=t,this._error=0,this._autologin&&$$.localSave(\"nigolotua\",[this.login(),this.password()])):(this._user=null,this._error=t),this._ping(),this._change()},_ping:function(){$$.service(\"tfw.login.Ping\",null,this,\"_onPing\")},_onPing:function(){this.isLogged()&&$$.invokeLater(2e5,this,\"_ping\")},_hash:function(t,i){var n,s,o,e,r=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],h=0,u=[];for(n=0;n<t.length;n++)u.push(t.charCodeAt(n));for(256%u.length==0&&u.push(0),n=0;256>n;n++)r[n%16]^=n+u[n%u.length],s=i[h++%i.length]%16,o=i[h++%i.length]%16,e=i[h++%i.length]%16,r[e]^=(r[e]+16*o+e)%256,r[o]^=(r[s]+r[e])%256;return r}}};"}}