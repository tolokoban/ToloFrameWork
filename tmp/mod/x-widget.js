{"intl":"","src":"/** @module x-widget */require( 'x-widget', function(exports, module) {  \"use strict\";\n\nvar DB = require(\"tfw.data-binding\");\n\nvar widgets = {};\n// Used for `onWidgetCreation()`.\nvar slots = {};\n\n\nvar Widget = function(id, modName, args) {\n    try {\n        var dst = document.getElementById( id );\n        if (!dst) {\n            // This widget does not exist!\n            return;\n        }\n        var module = require( modName );\n        var wdg = new module( args );\n        var elem = typeof wdg.element === 'function' ? wdg.element() : wdg.element;\n        elem.setAttribute( 'id', id );\n        dst.parentNode.replaceChild( elem, dst );\n        register( id, wdg );\n    }\n    catch (ex) {\n        console.error(\"[x-widget] Unable to create widget `\" + modName + \"`!\");\n        console.error(\"[x-widget] id = \", id, \", args = \", args);\n        throw Error(ex);\n    }\n};\n\nWidget.template = function( attribs ) {\n    var key, val, id, name = '', args = {};\n    for( key in attribs ) {\n        val = attribs[key];\n        if( key == 'name' ) {\n            name = val;\n        }\n        else if( key == 'id' ) {\n            id = val;\n        }\n        else if( key.charAt(0)=='$' ) {\n            args[key.substr( 1 )] = val;\n        }\n    }\n    var module = require( name );\n    var wdg = new module( args );\n    if( id ) {\n        register( id, wdg );\n    }\n\n    return typeof wdg.element === 'function' ? wdg.element() : (wdg.element || wdg);\n};\n\nfunction register( id, wdg ) {\n    widgets[id] = wdg;\n    var mySlots = slots[id];\n    console.info(\"[x-widget] widget creation=...\", id);\n    if( typeof mySlots !== 'undefined' ) {\n        window.setTimeout(function() {\n            mySlots.forEach(function (slot) {\n                slot( wdg );\n            });\n            delete slots[id];\n        });\n    }\n    return typeof wdg.element === 'function' ? wdg.element : (wdg.element || wdg);\n};\n\nWidget.getById = function( id ) {\n    if( !widgets[id] ) throw Error( \"[x-widget.getById()] ID not found: \" + id + \"!\" );\n    return widgets[id];\n};\n\nWidget.onWidgetCreation = function( id, slot ) {\n    if( typeof widgets[id] === 'undefined' ) {\n        if( typeof slots[id] === 'undefined' ) slots[id] = [slot];\n        else slots[id].push( slot );\n    } else {\n        // Asynchronous call to the slot\n        window.setTimeout(\n            function() {\n                slot( widgets[id] );\n            }\n        );\n    }\n};\n\nWidget.bind = function( id, attribs ) {\n    var dstObj = widgets[id];\n    var dstAtt, binding;\n    var srcObj, srcAtt;\n    for( dstAtt in attribs ) {\n        binding = attribs[dstAtt].B;\n        srcObj = widgets[binding[0]];\n        if( typeof srcObj === 'undefined' ) {\n            console.error( \"[x-widget:bind] Trying to bind attribute \\\"\" + dstAtt\n                           + \"\\\" of widget \\\"\" + id + \"\\\" to the unexisting widget \\\"\"\n                           + binding[0] + \"\\\"!\");\n            return;\n        }\n        srcAtt = binding[1];\n        DB.bind( srcObj, srcAtt, dstObj, dstAtt );\n    }\n};\n\nmodule.exports = Widget;\n\n\n\n \n/**\n * @module x-widget\n * @see module:tfw.data-binding\n * @see module:x-widget\n\n */\n});","zip":"require(\"x-widget\",function(e,t){\"use strict\";function n(e,t){r[e]=t;var n=o[e];return console.info(\"[x-widget] widget creation=...\",e),\"undefined\"!=typeof n&&window.setTimeout(function(){n.forEach(function(e){e(t)}),delete o[e]}),\"function\"==typeof t.element?t.element:t.element||t}var i=require(\"tfw.data-binding\"),r={},o={},d=function(e,t,i){try{var r=document.getElementById(e);if(!r)return;var o=require(t),d=new o(i),u=\"function\"==typeof d.element?d.element():d.element;u.setAttribute(\"id\",e),r.parentNode.replaceChild(u,r),n(e,d)}catch(f){throw console.error(\"[x-widget] Unable to create widget `\"+t+\"`!\"),console.error(\"[x-widget] id = \",e,\", args = \",i),Error(f)}};d.template=function(e){var t,i,r,o=\"\",d={};for(t in e)i=e[t],\"name\"==t?o=i:\"id\"==t?r=i:\"$\"==t.charAt(0)&&(d[t.substr(1)]=i);var u=require(o),f=new u(d);return r&&n(r,f),\"function\"==typeof f.element?f.element():f.element||f},d.getById=function(e){if(!r[e])throw Error(\"[x-widget.getById()] ID not found: \"+e+\"!\");return r[e]},d.onWidgetCreation=function(e,t){\"undefined\"==typeof r[e]?\"undefined\"==typeof o[e]?o[e]=[t]:o[e].push(t):window.setTimeout(function(){t(r[e])})},d.bind=function(e,t){var n,o,d,u,f=r[e];for(n in t){if(o=t[n].B,d=r[o[0]],\"undefined\"==typeof d)return void console.error('[x-widget:bind] Trying to bind attribute \"'+n+'\" of widget \"'+e+'\" to the unexisting widget \"'+o[0]+'\"!');u=o[1],i.bind(d,u,f,n)}},t.exports=d});\n//# sourceMappingURL=x-widget.js.map","map":{"version":3,"file":"x-widget.js.map","sources":["x-widget.js"],"sourcesContent":["/** @module x-widget */require( 'x-widget', function(exports, module) {  \"use strict\";\n\nvar DB = require(\"tfw.data-binding\");\n\nvar widgets = {};\n// Used for `onWidgetCreation()`.\nvar slots = {};\n\n\nvar Widget = function(id, modName, args) {\n    try {\n        var dst = document.getElementById( id );\n        if (!dst) {\n            // This widget does not exist!\n            return;\n        }\n        var module = require( modName );\n        var wdg = new module( args );\n        var elem = typeof wdg.element === 'function' ? wdg.element() : wdg.element;\n        elem.setAttribute( 'id', id );\n        dst.parentNode.replaceChild( elem, dst );\n        register( id, wdg );\n    }\n    catch (ex) {\n        console.error(\"[x-widget] Unable to create widget `\" + modName + \"`!\");\n        console.error(\"[x-widget] id = \", id, \", args = \", args);\n        throw Error(ex);\n    }\n};\n\nWidget.template = function( attribs ) {\n    var key, val, id, name = '', args = {};\n    for( key in attribs ) {\n        val = attribs[key];\n        if( key == 'name' ) {\n            name = val;\n        }\n        else if( key == 'id' ) {\n            id = val;\n        }\n        else if( key.charAt(0)=='$' ) {\n            args[key.substr( 1 )] = val;\n        }\n    }\n    var module = require( name );\n    var wdg = new module( args );\n    if( id ) {\n        register( id, wdg );\n    }\n\n    return typeof wdg.element === 'function' ? wdg.element() : (wdg.element || wdg);\n};\n\nfunction register( id, wdg ) {\n    widgets[id] = wdg;\n    var mySlots = slots[id];\n    console.info(\"[x-widget] widget creation=...\", id);\n    if( typeof mySlots !== 'undefined' ) {\n        window.setTimeout(function() {\n            mySlots.forEach(function (slot) {\n                slot( wdg );\n            });\n            delete slots[id];\n        });\n    }\n    return typeof wdg.element === 'function' ? wdg.element : (wdg.element || wdg);\n};\n\nWidget.getById = function( id ) {\n    if( !widgets[id] ) throw Error( \"[x-widget.getById()] ID not found: \" + id + \"!\" );\n    return widgets[id];\n};\n\nWidget.onWidgetCreation = function( id, slot ) {\n    if( typeof widgets[id] === 'undefined' ) {\n        if( typeof slots[id] === 'undefined' ) slots[id] = [slot];\n        else slots[id].push( slot );\n    } else {\n        // Asynchronous call to the slot\n        window.setTimeout(\n            function() {\n                slot( widgets[id] );\n            }\n        );\n    }\n};\n\nWidget.bind = function( id, attribs ) {\n    var dstObj = widgets[id];\n    var dstAtt, binding;\n    var srcObj, srcAtt;\n    for( dstAtt in attribs ) {\n        binding = attribs[dstAtt].B;\n        srcObj = widgets[binding[0]];\n        if( typeof srcObj === 'undefined' ) {\n            console.error( \"[x-widget:bind] Trying to bind attribute \\\"\" + dstAtt\n                           + \"\\\" of widget \\\"\" + id + \"\\\" to the unexisting widget \\\"\"\n                           + binding[0] + \"\\\"!\");\n            return;\n        }\n        srcAtt = binding[1];\n        DB.bind( srcObj, srcAtt, dstObj, dstAtt );\n    }\n};\n\nmodule.exports = Widget;\n\n\n\n \n});"],"names":["require","exports","module","register","id","wdg","widgets","mySlots","slots","console","info","window","setTimeout","forEach","slot","element","DB","Widget","modName","args","dst","document","getElementById","elem","setAttribute","parentNode","replaceChild","ex","error","Error","template","attribs","key","val","name","charAt","substr","getById","onWidgetCreation","push","bind","dstAtt","binding","srcObj","srcAtt","dstObj","B"],"mappings":"AAAuBA,QAAS,WAAY,SAASC,EAASC,GAAW,YAqDzE,SAASC,GAAUC,EAAIC,GACnBC,EAAQF,GAAMC,CACd,IAAIE,GAAUC,EAAMJ,EAUpB,OATAK,SAAQC,KAAK,iCAAkCN,GACxB,mBAAZG,IACPI,OAAOC,WAAW,WACdL,EAAQM,QAAQ,SAAUC,GACtBA,EAAMT,WAEHG,GAAMJ,KAGS,kBAAhBC,GAAIU,QAAyBV,EAAIU,QAAWV,EAAIU,SAAWV,EA/D7E,GAAIW,GAAKhB,QAAQ,oBAEbM,KAEAE,KAGAS,EAAS,SAASb,EAAIc,EAASC,GAC/B,IACI,GAAIC,GAAMC,SAASC,eAAgBlB,EACnC,KAAKgB,EAED,MAEJ,IAAIlB,GAASF,QAASkB,GAClBb,EAAM,GAAIH,GAAQiB,GAClBI,EAA8B,kBAAhBlB,GAAIU,QAAyBV,EAAIU,UAAYV,EAAIU,OACnEQ,GAAKC,aAAc,KAAMpB,GACzBgB,EAAIK,WAAWC,aAAcH,EAAMH,GACnCjB,EAAUC,EAAIC,GAElB,MAAOsB,GAGH,KAFAlB,SAAQmB,MAAM,uCAAyCV,EAAU,MACjET,QAAQmB,MAAM,mBAAoBxB,EAAI,YAAae,GAC7CU,MAAMF,IAIpBV,GAAOa,SAAW,SAAUC,GACxB,GAAIC,GAAKC,EAAK7B,EAAI8B,EAAO,GAAIf,IAC7B,KAAKa,IAAOD,GACRE,EAAMF,EAAQC,GACH,QAAPA,EACAE,EAAOD,EAEK,MAAPD,EACL5B,EAAK6B,EAEe,KAAfD,EAAIG,OAAO,KAChBhB,EAAKa,EAAII,OAAQ,IAAOH,EAGhC,IAAI/B,GAASF,QAASkC,GAClB7B,EAAM,GAAIH,GAAQiB,EAKtB,OAJIf,IACAD,EAAUC,EAAIC,GAGY,kBAAhBA,GAAIU,QAAyBV,EAAIU,UAAaV,EAAIU,SAAWV,GAkB/EY,EAAOoB,QAAU,SAAUjC,GACvB,IAAKE,EAAQF,GAAM,KAAMyB,OAAO,sCAAwCzB,EAAK,IAC7E,OAAOE,GAAQF,IAGnBa,EAAOqB,iBAAmB,SAAUlC,EAAIU,GACT,mBAAhBR,GAAQF,GACU,mBAAdI,GAAMJ,GAAsBI,EAAMJ,IAAOU,GAC/CN,EAAMJ,GAAImC,KAAMzB,GAGrBH,OAAOC,WACH,WACIE,EAAMR,EAAQF,OAM9Ba,EAAOuB,KAAO,SAAUpC,EAAI2B,GACxB,GACIU,GAAQC,EACRC,EAAQC,EAFRC,EAASvC,EAAQF,EAGrB,KAAKqC,IAAUV,GAAU,CAGrB,GAFAW,EAAUX,EAAQU,GAAQK,EAC1BH,EAASrC,EAAQoC,EAAQ,IACH,mBAAXC,GAIP,WAHAlC,SAAQmB,MAAO,6CAAgDa,EAC9C,gBAAoBrC,EAAK,+BACzBsC,EAAQ,GAAK,KAGlCE,GAASF,EAAQ,GACjB1B,EAAGwB,KAAMG,EAAQC,EAAQC,EAAQJ,KAIzCvC,EAAOD,QAAUgB"},"dependencies":["mod/tfw.data-binding","mod/x-widget"]}