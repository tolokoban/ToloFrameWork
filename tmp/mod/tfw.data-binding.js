{"intl":"","src":"/** @module tfw.data-binding */require( 'tfw.data-binding', function(exports, module) {  /**\r\n * @module tfw.data-binding\r\n *\r\n * @description\r\n * Provide all the functions needed for data-binding.\r\n *\r\n * @example\r\n * var mod = require('tfw.data-binding');\r\n */\r\nvar Listeners = require(\"tfw.listeners\");\r\n\r\n\r\nvar ID = '_tfw.data-binding_';\r\n\r\n\r\n/**\r\n * @param {object} obj - Object to which we want to add a property.\r\n * @param {string} att - Name of the attribute of `obj`.\r\n */\r\nexports.prop = function( obj, att, val ) {\r\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\r\n    obj[ID][att] = {\r\n        value: val,\r\n        event: new Listeners()\r\n    };\r\n    Object.defineProperty( obj, att, {\r\n        get: function() { return obj[ID][att].value; },\r\n        set: function(v) {\r\n            if( obj[ID][att].value !== v ) {\r\n                obj[ID][att].value = v;\r\n                obj[ID][att].event.fire( v, obj, att );\r\n            }\r\n        },\r\n        configurable: false,\r\n        enumerable: true\r\n    });\r\n    return exports.bind.bind(exports, obj, att);\r\n};\r\n\r\n\r\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\r\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\r\n        console.error( srcAtt + \" is not a bindable property of \", srcObj );\r\n        throw Error( srcAtt + \" is not a bindable property!\" );\r\n    }\r\n\r\n    if( typeof options === 'undefined' ) options = {};\r\n\r\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\r\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\r\n    };\r\n    srcObj[ID][srcAtt].event.add( lambda );\r\n\r\n    return options;\r\n};\r\n\r\n\r\nexports.extend = function( def, opt, att ) {\r\n    var out = JSON.parse( JSON.stringify( def ) );\r\n\r\n    if (typeof opt === 'string') {\r\n        if( typeof att !== 'string' ) att = 'value';\r\n        var value = opt;\r\n        opt = {};\r\n        opt[att] = value;\r\n    }\r\n\r\n    var key, val;\r\n    for( key in opt ) {\r\n        val = opt[key];\r\n        if( typeof out[key] === 'undefined' ) {\r\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\r\n        } else {\r\n            out[key] = val;\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n\r\n\r\n \r\n/**\n * @module tfw.data-binding\n * @see module:tfw.data-binding\n * @see module:tfw.listeners\n\n */\n});","zip":"require(\"tfw.data-binding\",function(e,n){var t=require(\"tfw.listeners\"),r=\"_tfw.data-binding_\";e.prop=function(n,i,o){return\"undefined\"==typeof n[r]&&(n[r]={}),n[r][i]={value:o,event:new t},Object.defineProperty(n,i,{get:function(){return n[r][i].value},set:function(e){n[r][i].value!==e&&(n[r][i].value=e,n[r][i].event.fire(e,n,i))},configurable:!1,enumerable:!0}),e.bind.bind(e,n,i)},e.bind=function(e,n,t,i,o){if(\"undefined\"==typeof e[r]||\"undefined\"==typeof e[r][n])throw console.error(n+\" is not a bindable property of \",e),Error(n+\" is not a bindable property!\");\"undefined\"==typeof o&&(o={});var f=\"function\"==typeof t?t:function(e,n,r){t[i]=\"function\"==typeof o.converter?o.converter(e):e};return e[r][n].event.add(f),o},e.extend=function(e,n,t){var r=JSON.parse(JSON.stringify(e));if(\"string\"==typeof n){\"string\"!=typeof t&&(t=\"value\");var i=n;n={},n[t]=i}var o,f;for(o in n)f=n[o],\"undefined\"==typeof r[o]?console.error(\"[tfw.data-binding.extend] Undefined argument: `\"+o+\"`!\"):r[o]=f;return r}});\n//# sourceMappingURL=tfw.data-binding.js.map","map":{"version":3,"file":"tfw.data-binding.js.map","sources":["tfw.data-binding.js"],"sourcesContent":["/** @module tfw.data-binding */require( 'tfw.data-binding', function(exports, module) {  /**\r\n * @module tfw.data-binding\r\n *\r\n * @description\r\n * Provide all the functions needed for data-binding.\r\n *\r\n * @example\r\n * var mod = require('tfw.data-binding');\r\n */\r\nvar Listeners = require(\"tfw.listeners\");\r\n\r\n\r\nvar ID = '_tfw.data-binding_';\r\n\r\n\r\n/**\r\n * @param {object} obj - Object to which we want to add a property.\r\n * @param {string} att - Name of the attribute of `obj`.\r\n */\r\nexports.prop = function( obj, att, val ) {\r\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\r\n    obj[ID][att] = {\r\n        value: val,\r\n        event: new Listeners()\r\n    };\r\n    Object.defineProperty( obj, att, {\r\n        get: function() { return obj[ID][att].value; },\r\n        set: function(v) {\r\n            if( obj[ID][att].value !== v ) {\r\n                obj[ID][att].value = v;\r\n                obj[ID][att].event.fire( v, obj, att );\r\n            }\r\n        },\r\n        configurable: false,\r\n        enumerable: true\r\n    });\r\n    return exports.bind.bind(exports, obj, att);\r\n};\r\n\r\n\r\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\r\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\r\n        console.error( srcAtt + \" is not a bindable property of \", srcObj );\r\n        throw Error( srcAtt + \" is not a bindable property!\" );\r\n    }\r\n\r\n    if( typeof options === 'undefined' ) options = {};\r\n\r\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\r\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\r\n    };\r\n    srcObj[ID][srcAtt].event.add( lambda );\r\n\r\n    return options;\r\n};\r\n\r\n\r\nexports.extend = function( def, opt, att ) {\r\n    var out = JSON.parse( JSON.stringify( def ) );\r\n\r\n    if (typeof opt === 'string') {\r\n        if( typeof att !== 'string' ) att = 'value';\r\n        var value = opt;\r\n        opt = {};\r\n        opt[att] = value;\r\n    }\r\n\r\n    var key, val;\r\n    for( key in opt ) {\r\n        val = opt[key];\r\n        if( typeof out[key] === 'undefined' ) {\r\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\r\n        } else {\r\n            out[key] = val;\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n\r\n\r\n \r\n});"],"names":["require","exports","module","Listeners","ID","prop","obj","att","val","value","event","Object","defineProperty","get","set","v","fire","configurable","enumerable","bind","srcObj","srcAtt","dstObj","dstAtt","options","console","error","Error","lambda","converter","add","extend","def","opt","out","JSON","parse","stringify","key"],"mappings":"AAA+BA,QAAS,mBAAoB,SAASC,EAASC,GAS9E,GAAIC,GAAYH,QAAQ,iBAGpBI,EAAK,oBAOTH,GAAQI,KAAO,SAAUC,EAAKC,EAAKC,GAiB/B,MAhBuB,mBAAZF,GAAIF,KAAsBE,EAAIF,OACzCE,EAAIF,GAAIG,IACJE,MAAOD,EACPE,MAAO,GAAIP,IAEfQ,OAAOC,eAAgBN,EAAKC,GACxBM,IAAK,WAAa,MAAOP,GAAIF,GAAIG,GAAKE,OACtCK,IAAK,SAASC,GACNT,EAAIF,GAAIG,GAAKE,QAAUM,IACvBT,EAAIF,GAAIG,GAAKE,MAAQM,EACrBT,EAAIF,GAAIG,GAAKG,MAAMM,KAAMD,EAAGT,EAAKC,KAGzCU,cAAc,EACdC,YAAY,IAETjB,EAAQkB,KAAKA,KAAKlB,EAASK,EAAKC,IAI3CN,EAAQkB,KAAO,SAAUC,EAAQC,EAAQC,EAAQC,EAAQC,GACrD,GAA0B,mBAAfJ,GAAOhB,IAAqD,mBAAvBgB,GAAOhB,GAAIiB,GAEvD,KADAI,SAAQC,MAAOL,EAAS,kCAAmCD,GACrDO,MAAON,EAAS,+BAGH,oBAAZG,KAA0BA,KAErC,IAAII,GAA2B,kBAAXN,GAAwBA,EAAS,SAASP,EAAGT,EAAKC,GAClEe,EAAOC,GAAuC,kBAAtBC,GAAQK,UAA2BL,EAAQK,UAAUd,GAAKA,EAItF,OAFAK,GAAOhB,GAAIiB,GAAQX,MAAMoB,IAAKF,GAEvBJ,GAIXvB,EAAQ8B,OAAS,SAAUC,EAAKC,EAAK1B,GACjC,GAAI2B,GAAMC,KAAKC,MAAOD,KAAKE,UAAWL,GAEtC,IAAmB,gBAARC,GAAkB,CACN,gBAAR1B,KAAmBA,EAAM,QACpC,IAAIE,GAAQwB,CACZA,MACAA,EAAI1B,GAAOE,EAGf,GAAI6B,GAAK9B,CACT,KAAK8B,IAAOL,GACRzB,EAAMyB,EAAIK,GACc,mBAAbJ,GAAII,GACXb,QAAQC,MAAM,kDAAoDY,EAAM,MAExEJ,EAAII,GAAO9B,CAInB,OAAO0B"},"dependencies":["mod/tfw.data-binding","mod/tfw.listeners"]}