{"intl":"","src":"/** @module tfw.data-binding */require( 'tfw.data-binding', function(exports, module) {  /**\n * @module tfw.data-binding\n *\n * @description\n * Provide all the functions needed for data-binding.\n *\n * @example\n * var mod = require('tfw.data-binding');\n */\nvar Listeners = require(\"tfw.listeners\");\n\n\nvar ID = '_tfw.data-binding_';\n\nvar converters = {\n    castBoolean: function(v) {\n        if (typeof v === 'boolean') return v;\n        if (typeof v === 'string') {\n            v = v.trim().toLowerCase();\n            if (v == '1' || v == 'true' || v == 'yes') {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        if (typeof v === 'number') {\n            return v ? true : false;\n        }\n        return false;\n    },\n    castEnum: function( enumeration ) {\n        var lowerCaseEnum = enumeration.map(String.toLowerCase);\n        return function(v) {\n            if (typeof v === 'number') {\n                return enumeration[Math.floor( v ) % enumeration.length];\n            }\n            if (typeof v !== 'string') return enumeration[0];\n            var idx = lowerCaseEnum.indexOf( v.trim().toLowerCase() );\n            if (idx < 0) idx = 0;\n            return enumeration[idx];\n        };\n    },\n    castInteger: function(v) {\n        if (typeof v === 'number') {\n            return Math.floor( v );\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseInt( v );\n        }\n        return Number.NaN;\n    },\n    castString: function(v) {\n        if (typeof v === 'string') return v;\n        return JSON.stringify( v );\n    }\n};\n\nfunction propCast( caster, obj, att, val ) {\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    obj[ID][att] = {\n        value: val,\n        event: new Listeners()\n    };\n    var setter;\n    if (typeof caster === 'function') {\n        setter = function(v) {\n            v = caster( v );\n            if( obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    } else {\n        setter = function(v) {\n            if( obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    }\n    Object.defineProperty( obj, att, {\n        get: function() { return obj[ID][att].value; },\n        set: setter,\n        configurable: false,\n        enumerable: true\n    });\n    return exports.bind.bind(exports, obj, att);\n};\n\nexports.fire = function( obj, att, val ) {\n    var currentValue = obj[att];\n    obj[att] = val;\n    if ( val === currentValue ) {\n        // If the value is the same, we must force the event firing.\n        obj[ID][att].event.fire( obj[att], obj, att );\n    }\n};\n\n/**\n * @param {object} obj - Object to which we want to add a property.\n * @param {string} att - Name of the attribute of `obj`.\n */\nexports.prop = propCast.bind( null, null );\n\nexports.propBoolean = propCast.bind( null, converters.castBoolean );\nexports.propInteger = propCast.bind( null, converters.castInteger );\nexports.propString = propCast.bind( null, converters.castString );\nexports.propEnum = function( enumeration ) {\n    return propCast.bind( null, converters.castEnum( enumeration ) );\n};\n\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\n        console.error( srcAtt + \" is not a bindable property of \", srcObj );\n        throw Error( srcAtt + \" is not a bindable property!\" );\n    }\n\n    if( typeof options === 'undefined' ) options = {};\n\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\n    };\n    srcObj[ID][srcAtt].event.add( lambda );\n\n    return options;\n};\n\n\nexports.extend = function( def, ext, obj ) {\n    var out = JSON.parse( JSON.stringify( def ) );\n\n    var key, val;\n    for( key in ext ) {\n        val = ext[key];\n        if( typeof out[key] === 'undefined' ) {\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\n        } else {\n            out[key] = val;\n        }\n    }\n\n    if (typeof obj !== 'undefined') {\n        for( key in out ) {\n            obj[key] = out[key];\n        }\n    }\n\n    return out;\n};\n\n\nexports.converters = converters;\n\n\n\n \n/**\n * @module tfw.data-binding\n * @see module:tfw.data-binding\n * @see module:tfw.listeners\n\n */\n});","zip":"require(\"tfw.data-binding\",function(n,e){function t(e,t,i,f){\"undefined\"==typeof t[o]&&(t[o]={}),t[o][i]={value:f,event:new r};var u;return u=\"function\"==typeof e?function(n){n=e(n),t[o][i].value!==n&&(t[o][i].value=n,t[o][i].event.fire(n,t,i))}:function(n){t[o][i].value!==n&&(t[o][i].value=n,t[o][i].event.fire(n,t,i))},Object.defineProperty(t,i,{get:function(){return t[o][i].value},set:u,configurable:!1,enumerable:!0}),n.bind.bind(n,t,i)}var r=require(\"tfw.listeners\"),o=\"_tfw.data-binding_\",i={castBoolean:function(n){return\"boolean\"==typeof n?n:\"string\"==typeof n?(n=n.trim().toLowerCase(),\"1\"==n||\"true\"==n||\"yes\"==n):\"number\"==typeof n?!!n:!1},castEnum:function(n){var e=n.map(String.toLowerCase);return function(t){if(\"number\"==typeof t)return n[Math.floor(t)%n.length];if(\"string\"!=typeof t)return n[0];var r=e.indexOf(t.trim().toLowerCase());return 0>r&&(r=0),n[r]}},castInteger:function(n){return\"number\"==typeof n?Math.floor(n):\"boolean\"==typeof n?n?1:0:\"string\"==typeof n?parseInt(n):Number.NaN},castString:function(n){return\"string\"==typeof n?n:JSON.stringify(n)}};n.fire=function(n,e,t){var r=n[e];n[e]=t,t===r&&n[o][e].event.fire(n[e],n,e)},n.prop=t.bind(null,null),n.propBoolean=t.bind(null,i.castBoolean),n.propInteger=t.bind(null,i.castInteger),n.propString=t.bind(null,i.castString),n.propEnum=function(n){return t.bind(null,i.castEnum(n))},n.bind=function(n,e,t,r,i){if(\"undefined\"==typeof n[o]||\"undefined\"==typeof n[o][e])throw console.error(e+\" is not a bindable property of \",n),Error(e+\" is not a bindable property!\");\"undefined\"==typeof i&&(i={});var f=\"function\"==typeof t?t:function(n,e,o){t[r]=\"function\"==typeof i.converter?i.converter(n):n};return n[o][e].event.add(f),i},n.extend=function(n,e,t){var r,o,i=JSON.parse(JSON.stringify(n));for(r in e)o=e[r],\"undefined\"==typeof i[r]?console.error(\"[tfw.data-binding.extend] Undefined argument: `\"+r+\"`!\"):i[r]=o;if(\"undefined\"!=typeof t)for(r in i)t[r]=i[r];return i},n.converters=i});\n//# sourceMappingURL=tfw.data-binding.js.map","map":{"version":3,"file":"tfw.data-binding.js.map","sources":["tfw.data-binding.js"],"sourcesContent":["/** @module tfw.data-binding */require( 'tfw.data-binding', function(exports, module) {  /**\n * @module tfw.data-binding\n *\n * @description\n * Provide all the functions needed for data-binding.\n *\n * @example\n * var mod = require('tfw.data-binding');\n */\nvar Listeners = require(\"tfw.listeners\");\n\n\nvar ID = '_tfw.data-binding_';\n\nvar converters = {\n    castBoolean: function(v) {\n        if (typeof v === 'boolean') return v;\n        if (typeof v === 'string') {\n            v = v.trim().toLowerCase();\n            if (v == '1' || v == 'true' || v == 'yes') {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        if (typeof v === 'number') {\n            return v ? true : false;\n        }\n        return false;\n    },\n    castEnum: function( enumeration ) {\n        var lowerCaseEnum = enumeration.map(String.toLowerCase);\n        return function(v) {\n            if (typeof v === 'number') {\n                return enumeration[Math.floor( v ) % enumeration.length];\n            }\n            if (typeof v !== 'string') return enumeration[0];\n            var idx = lowerCaseEnum.indexOf( v.trim().toLowerCase() );\n            if (idx < 0) idx = 0;\n            return enumeration[idx];\n        };\n    },\n    castInteger: function(v) {\n        if (typeof v === 'number') {\n            return Math.floor( v );\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseInt( v );\n        }\n        return Number.NaN;\n    },\n    castString: function(v) {\n        if (typeof v === 'string') return v;\n        return JSON.stringify( v );\n    }\n};\n\nfunction propCast( caster, obj, att, val ) {\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    obj[ID][att] = {\n        value: val,\n        event: new Listeners()\n    };\n    var setter;\n    if (typeof caster === 'function') {\n        setter = function(v) {\n            v = caster( v );\n            if( obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    } else {\n        setter = function(v) {\n            if( obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    }\n    Object.defineProperty( obj, att, {\n        get: function() { return obj[ID][att].value; },\n        set: setter,\n        configurable: false,\n        enumerable: true\n    });\n    return exports.bind.bind(exports, obj, att);\n};\n\nexports.fire = function( obj, att, val ) {\n    var currentValue = obj[att];\n    obj[att] = val;\n    if ( val === currentValue ) {\n        // If the value is the same, we must force the event firing.\n        obj[ID][att].event.fire( obj[att], obj, att );\n    }\n};\n\n/**\n * @param {object} obj - Object to which we want to add a property.\n * @param {string} att - Name of the attribute of `obj`.\n */\nexports.prop = propCast.bind( null, null );\n\nexports.propBoolean = propCast.bind( null, converters.castBoolean );\nexports.propInteger = propCast.bind( null, converters.castInteger );\nexports.propString = propCast.bind( null, converters.castString );\nexports.propEnum = function( enumeration ) {\n    return propCast.bind( null, converters.castEnum( enumeration ) );\n};\n\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\n        console.error( srcAtt + \" is not a bindable property of \", srcObj );\n        throw Error( srcAtt + \" is not a bindable property!\" );\n    }\n\n    if( typeof options === 'undefined' ) options = {};\n\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\n    };\n    srcObj[ID][srcAtt].event.add( lambda );\n\n    return options;\n};\n\n\nexports.extend = function( def, ext, obj ) {\n    var out = JSON.parse( JSON.stringify( def ) );\n\n    var key, val;\n    for( key in ext ) {\n        val = ext[key];\n        if( typeof out[key] === 'undefined' ) {\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\n        } else {\n            out[key] = val;\n        }\n    }\n\n    if (typeof obj !== 'undefined') {\n        for( key in out ) {\n            obj[key] = out[key];\n        }\n    }\n\n    return out;\n};\n\n\nexports.converters = converters;\n\n\n\n \n});"],"names":["require","exports","module","propCast","caster","obj","att","val","ID","value","event","Listeners","setter","v","fire","Object","defineProperty","get","set","configurable","enumerable","bind","converters","castBoolean","trim","toLowerCase","castEnum","enumeration","lowerCaseEnum","map","String","Math","floor","length","idx","indexOf","castInteger","parseInt","Number","NaN","castString","JSON","stringify","currentValue","prop","propBoolean","propInteger","propString","propEnum","srcObj","srcAtt","dstObj","dstAtt","options","console","error","Error","lambda","converter","add","extend","def","ext","key","out","parse"],"mappings":"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"},"dependencies":["mod/tfw.data-binding","mod/tfw.listeners"]}